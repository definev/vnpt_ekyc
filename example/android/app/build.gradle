plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

android {
    namespace = "com.definev.vnpt_ekyc_example"
    compileSdk = flutter.compileSdkVersion
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    aaptOptions {
        noCompress = 'bic'
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId = "com.definev.vnpt_ekyc_example"
        // You can update the following values to match your application needs.
        // For more information, see: https://flutter.dev/to/review-gradle-config.
        minSdk = flutter.minSdkVersion
        targetSdk = 34
        versionCode = flutter.versionCode
        versionName = flutter.versionName
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig = signingConfigs.debug
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            shrinkResources false
            minifyEnabled true
        }

        debug {
            signingConfig = signingConfigs.debug
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    dependencies {
        implementation fileTree(dir: 'libs', include: ['*.aar'])

//        implementation 'androidx.appcompat:appcompat:1.7.0'
//        implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
//        implementation 'androidx.exifinterface:exifinterface:1.3.7'
//        implementation 'com.google.code.gson:gson:2.10.1'
//        implementation 'com.airbnb.android:lottie:3.0.3-support'
//        implementation 'com.squareup.okhttp3:okhttp:4.12.0'
//
//        // NFC
//        implementation 'org.jmrtd:jmrtd:0.7.24'
//        implementation 'com.madgag.spongycastle:prov:1.58.0.0'
//        implementation 'net.sf.scuba:scuba-sc-android:0.0.23'
//        implementation group: 'org.ejbca.cvc', name: 'cert-cvc', version: '1.4.6'
//        implementation 'org.bouncycastle:bcpkix-jdk15on:1.67'
//        implementation 'commons-io:commons-io:2.13.0'
//        implementation 'com.gemalto.jp2:jp2-android:1.0.3'
//        implementation 'com.github.mhshams:jnbis:2.0.2'
//
//        // MRZ
//        implementation 'org.slf4j:slf4j-android:1.7.30'
//        implementation 'cz.adaptech:tesseract4android:2.1.0'
//        implementation 'com.google.android.gms:play-services-mlkit-text-recognition:19.0.1'
//        implementation "com.google.zxing:core:3.5.1"
//        implementation "androidx.camera:camera-core:1.3.4"
//        implementation "androidx.camera:camera-camera2:1.3.4"
//        implementation "androidx.camera:camera-lifecycle:1.3.4"
//        implementation "androidx.camera:camera-view:1.3.4"
//

        // implementation 'com.android.support:appcompat-v7:28.0.0'
        // implementation 'com.android.support:design:28.0.0'
        // implementation 'com.android.support.constraint:constraint-layout:2.0.4'
        // implementation 'de.hdodenhof:circleimageview:3.1.0'
        // implementation 'com.intuit.sdp:sdp-android:1.0.6'
        // implementation 'com.android.support:exifinterface:28.0.0'
        // implementation 'com.google.code.gson:gson:2.8.6'
        // implementation 'com.airbnb.android:lottie:3.0.3-support'
        // implementation('me.dm7.barcodescanner:zxing:1.9.8') {
        //     exclude group: 'com.android.support'
        // }

        // // define a BOM and its version
        // implementation(platform("com.squareup.okhttp3:okhttp-bom:4.12.0"))

        // // define any required OkHttp artifacts without version
        // implementation("com.squareup.okhttp3:okhttp")
        // implementation("com.squareup.okhttp3:logging-interceptor")

    }
}

flutter {
    source = "../.."
}
